import sqlite3
from telebot import types


price = {0: 200,
         1: 100,
         2: 150,
         3: 50,
         4: 100,
         5: 170
}


class Player:
    def __init__(self, player_id, money=100,
                 mafia_role=0, mafia_shield=0, mafia_documents=0,
                 uno_skips=0, uno_change_color=0, uno_cards=0,
                 bot=None):

        self.id = player_id
        self.money = money

        self.bot = bot

        self.objects = [mafia_role, mafia_shield, mafia_documents,
                        uno_skips, uno_change_color, uno_cards]

    def print_info(self):
        """–ü–∏—à–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –∏–≥—Ä–æ–∫—É"""
        text = self.get_info()

        keyboard = types.InlineKeyboardMarkup()
        callback_button = types.InlineKeyboardButton(text="üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")
        keyboard.add(callback_button)

        self.bot.send_message(chat_id=self.id, text=text, parse_mode="Markdown", reply_markup=keyboard)

    def get_info(self):
        text = f'''üë§*–ü—Ä–æ—Ñ–∏–ª—å*

üíµ –î–µ–Ω—å–≥–∏: {self.money}

üéé –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–æ–ª—å: {self.objects[0]}
üõ° –ó–∞—â–∏—Ç–∞: {self.objects[1]}
üìÇ –î–æ–∫—É–º–µ–Ω—Ç—ã: {self.objects[2]}

üî¥ –ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞: {self.objects[3]}
üîÑ –°–º–µ–Ω–∞ —Ü–≤–µ—Ç–∞: {self.objects[4]}
‚ûï +2 –∫–∞—Ä—Ç—ã –ª—é–±–æ–º—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É: {self.objects[5]}'''

        return text

    def use_object(self, obj_id):
        """–¢—Ä–∞—Ç–∏—Ç –æ–±—ä–µ–∫—Ç. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1 –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç –ø–æ—Ç—Ä–∞—á–µ–Ω –∏ 0, –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ—Ç"""
        if self.objects[obj_id]:
            self.objects[obj_id] -= 1
            self.load_info()
            return True
        return False

    def open_shop(self, call):
        # –ö–Ω–æ–ø–∫–∞
        text = '''–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å? 
_–ú–∞—Ñ–∏—è_
üéé *–ê–∫—Ç–∏–≤–Ω–∞—è —Ä–æ–ª—å*
–ù–∞–¥–æ–µ–ª–æ —Å–∫—É—á–∞—Ç—å –ø–æ –Ω–æ—á–∞–º? –≠—Ç–∞ –ø–æ–∫—É–ø–∫–∞ —É–≤–µ–ª–∏—á–∏—Ç —à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–æ–ª–∏
üõ° *–ó–∞—â–∏—Ç–∞*
–ú–æ–∂–µ—Ç —Å–ø–∞—Å—Ç–∏ –æ–¥–∏–Ω —Ä–∞–∑, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –Ω–æ—á—å—é –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è —Ç–µ–±—è —É–±–∏—Ç—å
üìÇ *–î–æ–∫—É–º–µ–Ω—Ç—ã*
–ü—Ä–∏–≥–æ–¥—è—Ç—Å—è, –∫–æ–≥–¥–∞ –∫–æ–º–∏—Å—Å–∞—Ä –∑–∞—Ö–æ—á–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–≤–æ—é —Ä–æ–ª—å

_–£–Ω–æ_
üî¥ *–ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞*
–ü–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç –Ω—É–∂–Ω–æ–π –∫–∞—Ä—Ç—ã
üîÑ *–°–º–µ–Ω–∞ —Ü–≤–µ—Ç–∞*
–ù–µ—Ç –Ω—É–∂–Ω–æ–π –∫–∞—Ä—Ç—ã? –ù–µ –±–µ–¥–∞. –≠—Ç–æ —É—Å–∏–ª–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–¥–∏–Ω —Ä–∞–∑ —Å–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç
‚ûï *2 –∫–∞—Ä—Ç—ã –ª—é–±–æ–º—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É*
–ù–µ –ø–æ–≤–µ–∑–ª–æ —Ç–æ–º—É, –∫–æ–≥–æ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å... –í–µ–¥—å —É —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è 2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç—ã
'''

        keyboard = types.InlineKeyboardMarkup()

        mas = [f'üéé –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–æ–ª—å - {price[0]}', f'üõ° –ó–∞—â–∏—Ç–∞ - {price[1]}', f'üìÇ –ü–æ–¥–¥–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã - {price[2]}',
                 f'üî¥ –ü—Ä–æ–ø—É—Å–∫ —Ö–æ–¥–∞ - {price[3]}', f'üîÑ –°–º–µ–Ω–∞ —Ü–≤–µ—Ç–∞ - {price[4]}',
               f'‚ûï 2 –∫–∞—Ä—Ç—ã –ª—é–±–æ–º—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É - {price[5]}']

        for i in range(len(mas)):
            callback_button = types.InlineKeyboardButton(text=mas[i],
                                                         callback_data=str(i))
            keyboard.add(callback_button)

        callback_button = types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='shop_back')
        keyboard.add(callback_button)

        # –ö–Ω–æ–ø–∫–∞
        self.bot.edit_message_text(chat_id=call.message.chat.id,
                              message_id=call.message.id,
                              text=text, reply_markup=keyboard, parse_mode="Markdown")

        self.bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
                                  text="–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å?")

    def buy(self, call):
        """–ö—É–ø–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç"""
        if self.money < price[int(call.data)]:
            self.bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                           text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –∏–≥—Ä–∞—Ç—å!")
            return

        # !!!!!!!!!!!!!!!!!!!!!!!!!!—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ

        self.money -= price[int(call.data)]

        self.objects[int(call.data)] += 1

        name = call.message.json['reply_markup']['inline_keyboard'][int(call.data)][0]['text']

        name = name.split(' - ')[0]

        self.bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
                                       text="–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å: " + name)
        self.load_info()

    def back_shop(self, call):
        """–í–µ—Ä–Ω—É—Ç—å—Å—è –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞"""
        text = self.get_info()

        keyboard = types.InlineKeyboardMarkup()
        callback_button = types.InlineKeyboardButton(text="üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")
        keyboard.add(callback_button)

        self.bot.edit_message_text(chat_id=self.id, text=text,
                                   parse_mode="Markdown", message_id=call.message.id,
                                   reply_markup=keyboard)

        self.bot.answer_callback_query(callback_query_id=call.id, show_alert=True)

    def load_info(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î"""
        con = sqlite3.connect("files/players.sqlite")
        cur = con.cursor()

        cur.execute(f"""UPDATE players
SET money={self.money},
mafia_role={self.objects[0]},
mafia_shield={self.objects[1]},
mafia_documents={self.objects[2]},
uno_skips={self.objects[3]},
uno_change_color={self.objects[4]},
uno_cards={self.objects[5]}
WHERE ID={self.id}""")
        con.commit()

        con.close()

    def add_player(self):
        """–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫"""
        con = sqlite3.connect("files/players.sqlite")
        cur = con.cursor()

        cur.execute(f"""INSERT INTO players
        VALUES ({self.id}, 100, 0, 0, 0, 0, 0, 0)""")

        con.commit()
        con.close()

def get_players(bot):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–ª–∞—Å—Å–∞ Player"""
    con = sqlite3.connect("files/players.sqlite")

    cur = con.cursor()

    try:
        result = {}
        mas_id = cur.execute("""SELECT id FROM players""").fetchall()

        for i in mas_id:
            mas = cur.execute(f"""SELECT * FROM players WHERE id={i[0]}""").fetchall()[0]

            result[i[0]] = Player(*mas, bot)

        con.close()

        return result

    except:
        cur.execute("""CREATE TABLE players (
            id int,
            money int,
            mafia_role int,
            mafia_shield int,
            mafia_documents int,
            uno_skips int,
            uno_change_color int,
            uno_cards int,
            PRIMARY KEY(id)
        )""")

        con.commit()

        con.close()

        return {}


